# -----------------------------------------------------------------------------
# DO NOT EDIT! Generated from scripts/helper/templates/*.
#
# This file is part of the xPack distribution.
#   (https://xpack.github.io)
# Copyright (c) 2021 Liviu Ionescu.
#
# Permission to use, copy, modify, and/or distribute this software
# for any purpose is hereby granted, under the terms of the MIT license.
# -----------------------------------------------------------------------------

# https://help.github.com/en/actions
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners

# https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_dispatch
# https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event

# -----------------------------------------------------------------------------


name: 'Build xPack Ninja Build'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The semver of the release'
        required: false
        default: 'current'

jobs:

  linux-x64:
    name: 'Linux Intel - Ninja Build ${{ github.event.inputs.version }} build'
    timeout-minutes: 5760 # 4 days
    runs-on: [self-hosted, linux, x64]
    container:
      image: ilegeul/ubuntu:amd64-18.04-xbb-v4.0
    defaults:
      run:
        shell: bash --login -e -o pipefail {0} # For node PATH

    steps:
      - name: 'Environment'
        run: |
          uname -a
          lsb_release -sd
          whoami
          pwd
          node --version
          npm --version
          ls -lLA
          env

      - name: 'Clean working area'
        run: rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 3

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: npm install --location=global xpm@latest

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install

      - name: 'Build Linux x64 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config linux-x64
          xpm run build --config linux-x64

      - name: 'Build Windows x64 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config win32-x64
          xpm run build --config win32-x64

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'build/linux-x64/deploy/*,build/win32-x64/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: ${{ secrets.PUBLISH_TOKEN }}



  linux-arm:
    name: 'Linux Arm 32 - Ninja Build ${{ github.event.inputs.version }} build'
    timeout-minutes: 2880 # 2 days
    runs-on: [self-hosted, linux, arm, xbbla32]
    container:
      image: ilegeul/ubuntu:arm32v7-18.04-xbb-v4.0
    defaults:
      run:
        shell: bash --login -e -o pipefail {0} # For node PATH

    steps:
      - name: 'Environment'
        run: |
          uname -a
          lsb_release -sd
          whoami
          pwd
          node --version
          npm --version
          ls -lLA
          env

      - name: 'Clean working area'
        run: rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 3

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: npm install --location=global xpm@latest

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install

      - name: 'Build Linux arm32 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config linux-arm
          xpm run build --config linux-arm

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'build/linux-arm/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: ${{ secrets.PUBLISH_TOKEN }}



  linux-arm64:
    name: 'Linux Arm 64 - Ninja Build ${{ github.event.inputs.version }} build'
    timeout-minutes: 2880 # 2 days
    runs-on: [self-hosted, linux, arm64, xbbla64]
    container:
      image: ilegeul/ubuntu:arm64v8-18.04-xbb-v4.0
    defaults:
      run:
        shell: bash --login -e -o pipefail {0} # For node PATH

    steps:
      - name: 'Machine'
        run: |
          uname -a
          lsb_release -sd
          whoami
          pwd
          node --version
          npm --version
          ls -lLA
          env

      - name: 'Clean working area'
        run: rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 3

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: npm install --location=global xpm@latest

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install

      - name: 'Build Linux arm64 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config linux-arm64
          xpm run build --config linux-arm64

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'build/linux-arm64/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: ${{ secrets.PUBLISH_TOKEN }}



  macos-x64:
    name: 'macOS Intel - Ninja Build ${{ github.event.inputs.version }} build'
    timeout-minutes: 2880 # 2 days

    runs-on: [self-hosted, macos, intel]

    steps:
      - name: 'Environment'
        run: |
          uname -a
          sw_vers
          whoami
          pwd
          node --version
          npm --version
          ls -lLA
          env

      - name: 'Clean working area'
        run: rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 3

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: npm install --location=global xpm@latest

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install

      - name: 'Build macOS x64 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config darwin-x64
          xpm run build --config darwin-x64

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'build/darwin-x64/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: ${{ secrets.PUBLISH_TOKEN }}



  macos-arm64:
    name: 'macOS Arm - Ninja Build ${{ github.event.inputs.version }} build'
    timeout-minutes: 2880 # 2 days

    runs-on: [self-hosted, macos, apple]

    defaults:
      run:
        shell: "/usr/bin/arch -arch arm64e /bin/bash -l {0}"

    steps:
      - name: 'Environment'
        run: |
          uname -a
          sw_vers
          whoami
          pwd
          node --version
          npm --version
          ls -lLA
          env

      - name: 'Clean working area'
        run: rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 3

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: npm install --location=global xpm@latest

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install

      - name: 'Build macOS arm64 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config darwin-arm64
          xpm run build --config darwin-arm64

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'build/darwin-arm64/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: ${{ secrets.PUBLISH_TOKEN }}


